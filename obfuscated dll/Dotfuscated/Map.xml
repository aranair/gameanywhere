<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.1.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2010-05-27T08:11:28</timestamp>
        <product version="4.3.1000.31553" user="a a" serial="12345-GOLD-12345678--1234567-8-123456-78-12345">Dotfuscator Professional Edition</product>
    </header>
    <mapping>
        <module>
            <name>GameAnywhere.exe</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{2F458B2B-8D0C-48AC-8640-C057382D9AF4}</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000010-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000011-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000012-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000013-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000057-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000059-1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x60001f8-1</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.CreateFolderFailedException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>errorMessage</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Data.Game</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;, System.Collections.Generic.List`1&lt;string&gt;, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConfigParentPath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_ConfigPathList</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InstallPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SaveParentPath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_SavePathList</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ConfigParentPath</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_ConfigPathList</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InstallPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SaveParentPath</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_SavePathList</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>configParentPath</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>configPathList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>installPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>saveParentPath</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>savePathList</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Data.SyncAction</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Action</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Data.Game()</signature>
                        <name>get_MyGame</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;()</signature>
                        <name>get_UnsuccessfulSyncFiles</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Action</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game)</signature>
                        <name>set_MyGame</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;)</signature>
                        <name>set_UnsuccessfulSyncFiles</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>action</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>AllFiles</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ConfigFiles</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DoNothing</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Data.Game</signature>
                        <name>myGame</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SavedGameFiles</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;</signature>
                        <name>unsuccessfulSyncFiles</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Data.SyncError</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProcessName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ErrorMessage</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProcessName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>errorMessage</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>processName</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.DeleteDirectoryErrorException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>errorMessage</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.DriveNotFoundException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.InsufficientSpaceException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Interface.ChooseGame</name>
                <methodlist>
                    <method>
                        <signature>void(GameAnywhere.Process.Controller)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.Controller, System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;, GameAnywhere.Interface.startPage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseWaitDialog</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>confirmButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>confirmButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game)</signature>
                        <name>CreateConfigCheckBox</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game)</signature>
                        <name>CreateErrorConfigFileLabel</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game)</signature>
                        <name>CreateErrorSavedGameLabel</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game, System.Windows.Forms.Control)</signature>
                        <name>CreateGameIconPictureBox</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game, System.Windows.Forms.Control)</signature>
                        <name>CreateLabel</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point, string, System.Windows.Forms.Control)</signature>
                        <name>CreateLabel</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game)</signature>
                        <name>CreateSavedGameCheckBox</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisplayGameList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;)</signature>
                        <name>DisplaySyncResult</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>doneResultPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>doneResultPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>doneResultPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>doneResultPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>doneResultPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>errorButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>errorButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>errorButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>errorButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>errorButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction, GameAnywhere.Data.Game)</signature>
                        <name>FinalizeSyncAction</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GenerateGameDisplay</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>groupCheckBox_CheckedChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OpenWaitDialog</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction&amp;, GameAnywhere.Data.Game)</signature>
                        <name>ReadCheckBoxInformation</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, string, System.Windows.Forms.ImageLayout)</signature>
                        <name>SetBackgroundImage</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.CheckBox)</signature>
                        <name>SetFonts</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PictureBox, GameAnywhere.Data.Game)</signature>
                        <name>SetIcon</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction, string)</signature>
                        <name>SetSyncAction</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetupButtonsResultPanel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetupSynchronizationFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, bool, bool)</signature>
                        <name>SetVisibilityAndUsability</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>banner</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelButton</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.CheckBox&gt;</signature>
                        <name>checkBoxList</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>confirmButton</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.Controller</signature>
                        <name>controller</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>doneResultPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>errorButton</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;</signature>
                        <name>gameList</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.startPage</signature>
                        <name>parent</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>resultPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>showGamePanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>summaryPanel</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;</signature>
                        <name>syncActionList</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;</signature>
                        <name>syncActionListResult</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.WaitingDialog</signature>
                        <name>waitDialog</name>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>waitThread</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>yAxisLocation</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Interface.ConflictResolve</name>
                <methodlist>
                    <method>
                        <signature>void(GameAnywhere.Process.Controller, System.Collections.Generic.Dictionary`2&lt;string,int32&gt;, GameAnywhere.Interface.startPage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;&amp;, string, string)</signature>
                        <name>AssignDictionaryValue</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseWaitDialog</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>confirmButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>confirmButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CreateArrowPictureBox</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateConfigItems</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CreateDownloadCheckBox</name>
                    </method>
                    <method>
                        <signature>void(string, System.Windows.Forms.Control)</signature>
                        <name>CreateGameIconPictureBox</name>
                    </method>
                    <method>
                        <signature>void(string, System.Windows.Forms.Control)</signature>
                        <name>CreateLabel</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point, string, System.Windows.Forms.Control)</signature>
                        <name>CreateLabel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateSavedGameItems</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CreateUploadCheckBox</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisplayConflicts</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.CheckBox(string)</signature>
                        <name>FindCheckBox</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>FindConflictedGamesAndType</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.PictureBox(string)</signature>
                        <name>FindPictureBox</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>groupCheckBox_CheckChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>groupCheckBox_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OpenWaitDialog</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, string, System.Windows.Forms.ImageLayout)</signature>
                        <name>SetBackgroundImage</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.CheckBox)</signature>
                        <name>SetCheckBoxToButtonStyle</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color)</signature>
                        <name>SetErrorLabel</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PictureBox, string)</signature>
                        <name>SetIcon</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.CheckBox)</signature>
                        <name>SetImage</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.CheckBox, string, System.Drawing.ContentAlignment)</signature>
                        <name>SetImageForBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, bool, bool)</signature>
                        <name>SetVisibilityAndUsability</name>
                    </method>
                    <method>
                        <signature>string(string&amp;)</signature>
                        <name>SubstringFromLeft</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UntickPartnerCheckBox</name>
                    </method>
                    <method>
                        <signature>void(string, bool&amp;)</signature>
                        <name>VerifyConfigCheckBoxes</name>
                    </method>
                    <method>
                        <signature>void(string, bool&amp;)</signature>
                        <name>VerifySavedCheckBoxes</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>allConflictedGamesAndType</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.PictureBox&gt;</signature>
                        <name>arrowPictureBoxList</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>banner</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.CheckBox&gt;</signature>
                        <name>checkBoxList</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>confirmButton</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>conflictsList</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.Controller</signature>
                        <name>controller</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.startPage</signature>
                        <name>parent</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>showConflictsPanel</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.WaitingDialog</signature>
                        <name>waitDialog</name>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>waitThread</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>yAxisLocation</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Interface.reconfirmationWarning</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.Controller, System.Windows.Forms.Form, System.Windows.Forms.Form)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>buttonCancel_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>buttonOk_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>buttonOk</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelButton</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.Controller</signature>
                        <name>controller</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>formParent</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>parent_formParent</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBoxWarning</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Interface.restoreWarning</name>
                <methodlist>
                    <method>
                        <signature>void(GameAnywhere.Process.Controller)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Form, GameAnywhere.Process.Controller)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>buttonNo_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>buttonYes_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelButton_Click</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>buttonNo</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>buttonYes</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelButton</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>cancelClicked</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.Controller</signature>
                        <name>controller</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>formParent</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBoxWarning</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Interface.startPage</name>
                <methodlist>
                    <method>
                        <signature>void(GameAnywhere.Process.Controller)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelChangePasswordPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelChangePasswordPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelChangePasswordPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelChangePasswordPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelForgetPasswordPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelForgetPasswordPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelForgetPasswordPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelForgetPasswordPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelGrayButtons_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelLoginPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelLoginPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelLoginPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelLoginPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelLoginPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelRegisterPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelRegisterPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelRegisterPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelRegisterPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelRegisterPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelResendActivationPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelResendActivationPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>cancelResendActivationPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>cancelResendActivationPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ChangePasswordFunctions</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>changePasswordLoginPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>changePasswordLoginPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>changePasswordLoginPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>changePasswordLoginPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>changePasswordLoginPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>ChangePasswordPanel_KeyPress</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckEmailErrorsChangePasswordPanel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckEmailErrorsRegisterPanel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckEmailErrorsResendActivationPanel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckLoginDetails</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckPasswordErrorsChangePasswordPanel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckPasswordErrorsRegisterPanel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckPasswordErrorsResendActivationPanel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseWaitDialog</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>computerToThumbdriveButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>computerToThumbdriveButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>computerToThumbdriveButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>computerToThumbdriveButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>computerToThumbdriveButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>computerToWebButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>computerToWebButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>computerToWebButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>computerToWebButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>computerToWebButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ComToWebFunctions</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmChangePasswordPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmChangePasswordPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>confirmChangePasswordPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>confirmChangePasswordPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>confirmChangePasswordPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Panel)</signature>
                        <name>DisableOtherPanels</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisableThumbdriveFunctions</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Interface.restoreWarning)</signature>
                        <name>DisplayWarningDialog</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EnableMainControlButtons</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>exitButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>exitButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>exitButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>exitButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>exitButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExtAndWebFunctions</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ForgetPasswordFunctions</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>forgetPasswordLoginPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>forgetPasswordLoginPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>forgetPasswordLoginPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>forgetPasswordLoginPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>forgetPasswordLoginPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>ForgetPasswordPanel_KeyPress</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ChildActive</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UserClosing</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitiateChangePasswordPanel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitiateForgetPasswordPanel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitiateLoginPanel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitiateRegisterPanel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitiateResendActivationPanel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitiateStartPanel</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>IsValidEmail</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>IsValidPassword</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>loginButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>loginButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>loginButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>loginButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>loginButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoginFunctions</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>loginLoginPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>loginLoginPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>loginLoginPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>loginLoginPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>loginLoginPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>LoginPanel_KeyPress</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LogoutUser</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OpenWaitDialog</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>registerButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>registerButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>registerButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>registerButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>registerButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RegisterFunctions</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>RegisterPanel_KeyPress</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>registerRegisterPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>registerRegisterPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>registerRegisterPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>registerRegisterPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>registerRegisterPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResendActivationFunctions</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>resendActivationLoginPanelButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>resendActivationLoginPanelButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>resendActivationLoginPanelButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>resendActivationLoginPanelButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>resendActivationLoginPanelButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>ResendActivationPanel_KeyPress</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>resendButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>resendButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>resendButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>resendButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>resendButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetAllChangePasswordPanelTextBoxes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetAllForgetPasswordPanelTextBoxes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetAllLoginPanelTextBoxes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetAllRegisterPanelTextboxes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetAllResendActivationPanelTextBoxes</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ResetChangePasswordPanelTextBoxes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetErrorLabels</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ResetLoginPanelTextBoxes</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ResetRegisterPanelTextBoxes</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ResetResendActivationPanelTextBoxes</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>restoreButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>restoreButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>restoreButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>restoreButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>restoreButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>restoreOriginalFiles</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>sendButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>sendButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>sendButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>sendButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>sendButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ChildActive</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UserClosing</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, string, System.Windows.Forms.ImageLayout)</signature>
                        <name>SetBackgroundImage</name>
                    </method>
                    <method>
                        <signature>void(string, System.Drawing.Color)</signature>
                        <name>SetErrorLabel</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Button)</signature>
                        <name>SetMouseDownColor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Button)</signature>
                        <name>SetMouseEnterColor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Button)</signature>
                        <name>SetMouseLeaveColor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetPanelList</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, bool, bool)</signature>
                        <name>SetVisibilityAndUsability</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Shown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosingEventArgs)</signature>
                        <name>startPage_FormClosing</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>thumbdriveAndWebButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>thumbdriveAndWebButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>thumbdriveAndWebButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>thumbdriveAndWebButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>thumbdriveAndWebButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>thumbdriveToComputerButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>thumbdriveToComputerButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>thumbdriveToComputerButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>thumbdriveToComputerButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>thumbdriveToComputerButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WebToComFunctions</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>webToComputerButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>webToComputerButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>webToComputerButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>webToComputerButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>webToComputerButton_MouseUp</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ChildActive&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UserClosing&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelChangePasswordPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelForgetPasswordPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelLoginPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelRegisterPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelResendActivationPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>changePasswordLoginPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>changePasswordPanel</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>computerToThumbdriveButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>computerToWebButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>confirmChangePasswordPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>confirmNewpasswordChangePasswordPanelTextBox</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.Controller</signature>
                        <name>controller</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>emailChangePasswordPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>emailForgetPasswordPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>emailInvalidForgetPasswordPanelLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>emailInvalidLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>emailRegisterPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>emailResendActivationPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>emailTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>errorLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>exitButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>forgetPasswordLoginPanelbutton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>forgetPasswordPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label4</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>loggedInUserLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>loginButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>loginFailedLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>loginLoginPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>loginNavPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>loginPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>newpasswordChangePasswordPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>newpasswordMismatchChangePasswordPanelLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panel1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.Panel&gt;</signature>
                        <name>panelList</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>passwordChangePasswordPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>passwordInvalidLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>passwordMismatchLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.MaskedTextBox</signature>
                        <name>passwordReEnterRegisterPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.MaskedTextBox</signature>
                        <name>passwordRegisterPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>passwordResendActivationPanelTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.MaskedTextBox</signature>
                        <name>passwordTextBox</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>registerButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>registerNavPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>registerPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>registerRegisterPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>resendActivationLoginPanelButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>resendActivationPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>resendButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>restoreButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>sendButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>startNavPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>startPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>thumbdriveAndWebButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>thumbdriveToComputerButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>titlePanel</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.startPage/ClickStatus</signature>
                        <name>userClickStatus</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>userDetailsInvalidChangePasswordPanelLabel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>userDetailsInvalidResendActivationPanelLabel</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.WaitingDialog</signature>
                        <name>waitDialog</name>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>waitThread</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>webToComputerButton</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Interface.startPage/ClickStatus</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GameAnywhere.Interface.startPage/ClickStatus</signature>
                        <name>ComToWeb</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.startPage/ClickStatus</signature>
                        <name>ExtAndWeb</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.startPage/ClickStatus</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Interface.startPage/ClickStatus</signature>
                        <name>WebToCom</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Interface.SyncErrorDisplay</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;, System.Windows.Forms.Form)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;, System.Windows.Forms.Form)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;)</signature>
                        <name>CompileSyncErrors</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game, System.Windows.Forms.Control)</signature>
                        <name>CreateLabel</name>
                    </method>
                    <method>
                        <signature>void(string, System.Windows.Forms.Panel)</signature>
                        <name>CreateSyncErrorLabel</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisplayErrors</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>doneErrorDisplayButton_MouseClick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>doneErrorDisplayButton_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>doneErrorDisplayButton_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>doneErrorDisplayButton_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>doneErrorDisplayButton_MouseUp</name>
                    </method>
                    <method>
                        <signature>int32(System.Windows.Forms.Label&amp;)</signature>
                        <name>FindLabelLength</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, string, System.Windows.Forms.ImageLayout)</signature>
                        <name>SetBackgroundImage</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, bool, bool)</signature>
                        <name>SetVisibilityAndUsability</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;)</signature>
                        <name>ShowSyncErrors</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>doneErrorDisplayButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>errorDisplayPanel</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>parent</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox1</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;</signature>
                        <name>syncActionList</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>yAxisLocation</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Interface.WaitingDialog</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ContinueRun</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ContinueRun</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>startUp</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>continueRun</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.Controller</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string, string, string)</signature>
                        <name>ChangePassword</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;()</signature>
                        <name>CheckConflicts</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>EndProgram</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_direction</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;()</signature>
                        <name>GetGameList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsFixedMedia</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsLoggedIn</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>Login</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Logout</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>Register</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;()</signature>
                        <name>RemoveAllBackup</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>ResendActivation</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;()</signature>
                        <name>Restore</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>RetrievePassword</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_direction</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartGUI</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;)</signature>
                        <name>SynchronizeGames</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.Dictionary`2&lt;string,int32&gt;)</signature>
                        <name>SynchronizeWebAndThumb</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;direction&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.GameLibrary</signature>
                        <name>gameLibrary</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.User</signature>
                        <name>user</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync</signature>
                        <name>wats</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.FolderOperation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AccessControlType)</signature>
                        <name>AddFileSecurity</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CopyDirectory</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CopyFilesInDirectory</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;, int32, int32)</signature>
                        <name>CopyOriginalSettings</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CreateFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, string, bool)</signature>
                        <name>FindDifferences</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>findFileDifferences</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GenerateHash</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourcePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetPath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>GetAllFilesName</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>GetDirectoryFileCount</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetMD5HashFromFile</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AccessControlType)</signature>
                        <name>RemoveFileSecurity</name>
                    </method>
                    <method>
                        <signature>void(string[], string, bool, int32)</signature>
                        <name>SerializeMetaData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourcePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BOTH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ComToExt</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ComToWeb</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CONFIG</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>external</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ExtToCom</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SAVE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sourcePath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>targetPath</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WebToCom</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.GameLibrary</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.Controller)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;&amp;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>AddConfigFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;&amp;, string, string)</signature>
                        <name>AddFoldersAndFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;&amp;)</signature>
                        <name>AddGamesSupportedByThumbdrive</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;&amp;, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>AddGamesSupportedByWeb</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game, System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;&amp;)</signature>
                        <name>AddGameToExternalCommonList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;&amp;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>AddSaveFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;&amp;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>AddVariableConfigFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;&amp;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>AddVariableSaveFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;&amp;, string)</signature>
                        <name>ChangeFixedListsToExternalPaths</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Data.Game(GameAnywhere.Data.Game)</signature>
                        <name>EditGenericConfigAndSavedGameLists</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;&amp;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>FindAllConfigFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;&amp;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>FindAllSavedGameFiles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DocumentsPath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;()</signature>
                        <name>get_InstalledGameList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is64BitOS</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProgramFilesX86</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RegistrySoftwarePath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;(int32)</signature>
                        <name>GetGameList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;(int32, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>GetGameList</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOSName</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>HasDuplicate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Initialize</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Data.Game(System.Collections.Generic.Dictionary`2&lt;string,string&gt;, string, string, int32)</signature>
                        <name>InitializeGameFromTextFile</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.Game, System.Collections.Generic.List`1&lt;string&gt;, System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;&amp;)</signature>
                        <name>MatchWebGameAndFiles</name>
                    </method>
                    <method>
                        <signature>void(System.IO.StreamReader)</signature>
                        <name>ParseGamesFromFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshList</name>
                    </method>
                    <method>
                        <signature>void(string&amp;)</signature>
                        <name>RemoveTrailingSlash</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>ReplaceInstallPath</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ReplaceStrings</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>SeperatePathsByDelimiter</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;)</signature>
                        <name>set_InstalledGameList</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GameAnywhere.Process.Controller</signature>
                        <name>controller</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>entriesFromTextFile</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;</signature>
                        <name>installedGameList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>typeOS</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.GameLibraryPreCondition</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, string, object[]&amp;, object&amp;)</signature>
                        <name>SetGameLibraryPreCondition</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.GameLibraryVerifier</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifyGetGameList</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.MetaData</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>AddEntry</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteEntry</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.MetaData(string)</signature>
                        <name>DeSerialize</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>EntryExist</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_FileTable</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetEntryValue</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintMetaDataContents</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Serialize</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>set_FileTable</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>UpdateEntryValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>fileTable</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.OfflineSync</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>CalculateSpaceForFiles</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>CheckForEnoughSpace</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(string, string, string)</signature>
                        <name>CopyDirectory</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, string)</signature>
                        <name>CopyPathListToExternal</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction, string, int32)</signature>
                        <name>CopyToComputer</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, string, string, string)</signature>
                        <name>CopyToComputerHelper</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction, string)</signature>
                        <name>CopyToExternal</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, string, string)</signature>
                        <name>CopyToExternalHelper</name>
                    </method>
                    <method>
                        <signature>int64(System.IO.DirectoryInfo)</signature>
                        <name>DirSize</name>
                    </method>
                    <method>
                        <signature>System.IO.DriveInfo(System.IO.DriveInfo[], string)</signature>
                        <name>FindMatchingDrive</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;)</signature>
                        <name>SynchronizeGames</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ComToExternal</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ExternalToCom</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.OfflineSyncPreCondition</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>CleanUpOffLineSync</name>
                    </method>
                    <method>
                        <signature>void(int32, object[]&amp;, object&amp;, string)</signature>
                        <name>SetOfflineSyncPreCondition</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.OfflineSyncVerifier</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction, GameAnywhere.Process.TestResult&amp;)</signature>
                        <name>CheckRestore</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestoreGamesInExt</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object[], object, object, string, object, System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;)</signature>
                        <name>VerifyRestore</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifySynchronizeGames</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.OnlineSync</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;, GameAnywhere.Process.User)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, GameAnywhere.Data.SyncAction)</signature>
                        <name>ComputerToWeb</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>DeleteGameDirectory</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(string, string, string)</signature>
                        <name>DownloadToParent</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>GetGamesAndTypesAndFilesFromWeb</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>GetGamesAndTypesFromWeb</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>GetGamesFromWeb</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>GetPathList</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetWebFolderName</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsLockedFile</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsLockedFolder</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction)</signature>
                        <name>PopulatePathLists</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;)</signature>
                        <name>SynchronizeGames</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(string, string, string, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Upload</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;&amp;)</signature>
                        <name>UploadDirectory</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction, string, int32)</signature>
                        <name>WebToComputer</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ComToWeb</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.User</signature>
                        <name>currentUser</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ExternalAndWeb</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.Storage</signature>
                        <name>s3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WebToCom</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.OnlineSyncPreCondition</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>CleanUpOnlineSync</name>
                    </method>
                    <method>
                        <signature>void(int32, object[]&amp;, object&amp;, string)</signature>
                        <name>SetOnlineSyncPreCondition</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.OnlineSyncVerifier</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(GameAnywhere.Process.TestResult&amp;, GameAnywhere.Data.SyncAction)</signature>
                        <name>CheckOnlineSync</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifyOnlineSync</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.PreCondition</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, string, int32)</signature>
                        <name>CleanUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CopyGameFromThumbToCom</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;)</signature>
                        <name>CreateGATestBackup</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeleteTestBackup</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeleteVerifySyncFolder</name>
                    </method>
                    <method>
                        <signature>object[](string, int32)</signature>
                        <name>GetArray</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList(string, int32)</signature>
                        <name>GetArrayList</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Data.Game(string, int32)</signature>
                        <name>getGame</name>
                    </method>
                    <method>
                        <signature>bool(int32&amp;, int32)</signature>
                        <name>InternetGetConnectedState</name>
                    </method>
                    <method>
                        <signature>object(object, string, object[])</signature>
                        <name>InvokePrivateMethod</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsConnectedToInternet</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveGamesInExt</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestoreTestFolderName</name>
                    </method>
                    <method>
                        <signature>void(int32, string, object[]&amp;, object&amp;)</signature>
                        <name>SetPreCondition</name>
                    </method>
                    <method>
                        <signature>bool(bool)</signature>
                        <name>ToggleNetworkAdapter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>abuseGameName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>comToWebUser</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>externalPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FIFA10GameName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fifaSavePath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>footballManager</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.GameLibrary</signature>
                        <name>library</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>supportedGames</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>syncGamesOnWeb</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>theSims3</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>user</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Warcraft3GameName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>wc3InstallPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>webToComUser</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>worldOfWarcraft</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.Program</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.Sync</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction, string, string)</signature>
                        <name>AddToUnsuccessfulSyncFiles</name>
                    </method>
                    <method>
                        <signature>int32(GameAnywhere.Data.SyncAction)</signature>
                        <name>Backup</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(GameAnywhere.Data.Game, string, int32)</signature>
                        <name>BackupHelper</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, string)</signature>
                        <name>BackupPathList</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>CheckBackupExists</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;, string)</signature>
                        <name>CheckIfExistInErrorList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(string, string, string)</signature>
                        <name>CopyDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateDirectory</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CreateDirectory</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(string, string)</signature>
                        <name>Delete</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Delete</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction)</signature>
                        <name>DeleteCopiedFiles</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteDirectory</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;(System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;)</signature>
                        <name>DetermineGamesWithBackup</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Data.Game(GameAnywhere.Data.Game)</signature>
                        <name>FindInstalledGame</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SyncDirection</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(string, string, string)</signature>
                        <name>GetSyncError</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, string)</signature>
                        <name>GetSyncError</name>
                    </method>
                    <method>
                        <signature>bool(GameAnywhere.Data.Game)</signature>
                        <name>MatchWantedGameName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;()</signature>
                        <name>RemoveAllBackup</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;)</signature>
                        <name>RemoveAllBackup</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;()</signature>
                        <name>Restore</name>
                    </method>
                    <method>
                        <signature>int32(GameAnywhere.Data.SyncAction, bool)</signature>
                        <name>RestoreGame</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SyncDirection</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;)</signature>
                        <name>SynchronizeGames</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Data.SyncAction)</signature>
                        <name>UndoExternalToComSync</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>AllFiles</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackupConfigFolderName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackupSavedGameFolderName</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Config</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.Game&gt;</signature>
                        <name>installedGameList</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SavedGame</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;</signature>
                        <name>syncActionList</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>syncDirection</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SyncFolderConfigFolderName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>syncFolderPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SyncFolderSavedGameFolderName</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Uninitialize</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Data.Game</signature>
                        <name>wantedGame</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.TestCase</name>
                <methodlist>
                    <method>
                        <signature>void(string, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(string, object, object)</signature>
                        <name>CheckCondition</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExceptionThrown</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Index</name>
                    </method>
                    <method>
                        <signature>object[]()</signature>
                        <name>get_Input</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MethodName</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Output</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult()</signature>
                        <name>get_TestOutcome</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;(string)</signature>
                        <name>GetDictionaryParam</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>GetExpectedOutput</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(System.Exception)</signature>
                        <name>getInvalidError</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>GetParameters</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>getTestCaseProperties</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeTestCase</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult()</signature>
                        <name>invokeTestMethod</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExceptionThrown</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Index</name>
                    </method>
                    <method>
                        <signature>void(object[])</signature>
                        <name>set_Input</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MethodName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Output</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.TestResult)</signature>
                        <name>set_TestOutcome</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;</signature>
                        <name>deletedFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>exceptionThrown</name>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>expectedOutput</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>externalPath</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>index</name>
                    </field>
                    <field>
                        <signature>object[]</signature>
                        <name>input</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>methodName</name>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>output</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>testCase</name>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>testClass</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.TestResult</signature>
                        <name>testOutcome</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.TestDriver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string[], int32)</signature>
                        <name>CreateWebThumbSyncTestFile</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>GenerateWebThumbTestFiles</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeClassInfo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeTestCases</name>
                    </method>
                    <method>
                        <signature>object[](string)</signature>
                        <name>readConstructorArguments</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Process.TestCase&gt;()</signature>
                        <name>startTest</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>className</name>
                    </field>
                    <field>
                        <signature>object[]</signature>
                        <name>constructorParameters</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Process.TestCase&gt;</signature>
                        <name>testCases</name>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>testClass</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>tests</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.Tester</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>browseButton_Click</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Form1_Load</name>
                    </method>
                    <method>
                        <signature>object[](string)</signature>
                        <name>GetArray</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList(string)</signature>
                        <name>GetArrayList</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ReadButton_Click</name>
                    </method>
                    <method>
                        <signature>object[](string)</signature>
                        <name>readConstructorArguments</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>browseButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>commentsText</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RichTextBox</signature>
                        <name>displayResult</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FolderBrowserDialog</signature>
                        <name>folderBrowserDialog1</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.OpenFileDialog</signature>
                        <name>openFileDialog1</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>ReadButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>testCaseSource</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.TestResult</name>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddRemarks</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Remarks</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Result</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ReturnType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Remarks</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Result</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_ReturnType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>remarks</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>result</name>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>returnType</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.UserVerifier</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifyChangePassword</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifyLogin</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifyRegisterRetrievePassword</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifyResendActivation</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.Verifier</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;, GameAnywhere.Process.TestResult&amp;, bool)</signature>
                        <name>CheckBackupAndSync</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.TestResult&amp;, System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;)</signature>
                        <name>CheckSimilarities</name>
                    </method>
                    <method>
                        <signature>void(object, GameAnywhere.Process.TestResult&amp;, System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncAction&gt;, bool)</signature>
                        <name>CheckSyncGamesExpectedOutput</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.TestResult&amp;, System.Collections.Generic.List`1&lt;string&gt;, GameAnywhere.Data.Game, int32)</signature>
                        <name>CheckWithGamesOnWeb</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>abuse</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>externalPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FIFA10GameName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>footballManager</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>supportedGames</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>theSims3</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Warcraft3GameName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>worldOfWarcraft</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.WebAndThumbSync</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.User)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;()</signature>
                        <name>CheckConflicts</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.MetaData, GameAnywhere.Process.MetaData, GameAnywhere.Process.MetaData, GameAnywhere.Process.WebAndThumbSync/CheckConflictsDirection)</signature>
                        <name>CheckConflictsHelper</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateMetaData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteMetaData</name>
                    </method>
                    <method>
                        <signature>bool(GameAnywhere.Process.MetaData, GameAnywhere.Process.MetaData, string)</signature>
                        <name>FileIsDeleted</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;()</signature>
                        <name>FilterConflicts</name>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>GenerateHashDictionary</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.MetaData()</signature>
                        <name>get_LocalHash</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.MetaData()</signature>
                        <name>get_LocalMeta</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.MetaData()</signature>
                        <name>get_WebHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetGamesAndTypes</name>
                    </method>
                    <method>
                        <signature>bool(GameAnywhere.Process.MetaData, GameAnywhere.Process.MetaData, string)</signature>
                        <name>HashIsDifferent</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,int32&gt;)</signature>
                        <name>MergeConflicts</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.MetaData)</signature>
                        <name>set_LocalHash</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.MetaData)</signature>
                        <name>set_LocalMeta</name>
                    </method>
                    <method>
                        <signature>void(GameAnywhere.Process.MetaData)</signature>
                        <name>set_WebHash</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GameAnywhere.Data.SyncError&gt;(System.Collections.Generic.Dictionary`2&lt;string,int32&gt;)</signature>
                        <name>SynchronizeGames</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>UpdateMetaData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GameAnywhere.Process.WebAndThumbSync/ConflictDirection&gt;</signature>
                        <name>Conflicts</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>email</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.MetaData</signature>
                        <name>localHash</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.MetaData</signature>
                        <name>localMeta</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LocalMetaDataFileName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LocalMetaDataPath</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GameAnywhere.Process.WebAndThumbSync/NoConflictDirection&gt;</signature>
                        <name>NoConflict</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.Storage</signature>
                        <name>s3</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>syncFolderPath</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.MetaData</signature>
                        <name>webHash</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.WebAndThumbSync/CheckConflictsDirection</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/CheckConflictsDirection</signature>
                        <name>LocalToWeb</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/CheckConflictsDirection</signature>
                        <name>WebToLocal</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.WebAndThumbSync/ConflictDirection</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/ConflictDirection</signature>
                        <name>DownloadOrDeleteWeb</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/ConflictDirection</signature>
                        <name>UploadOrDeleteLocal</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/ConflictDirection</signature>
                        <name>UploadOrDownload</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.WebAndThumbSync/NoConflictDirection</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/NoConflictDirection</signature>
                        <name>DeleteLocal</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/NoConflictDirection</signature>
                        <name>DeleteMetadata</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/NoConflictDirection</signature>
                        <name>DeleteWeb</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/NoConflictDirection</signature>
                        <name>Download</name>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.WebAndThumbSync/NoConflictDirection</signature>
                        <name>Upload</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.WebThumbPreCondition</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>CleanUpWebAndThumb</name>
                    </method>
                    <method>
                        <signature>void(int32, GameAnywhere.Process.MetaData&amp;, GameAnywhere.Process.MetaData&amp;, GameAnywhere.Process.MetaData&amp;, GameAnywhere.Process.MetaData&amp;)</signature>
                        <name>SetCheckConflictPreCondition</name>
                    </method>
                    <method>
                        <signature>void(int32, object[]&amp;, object&amp;, string)</signature>
                        <name>SetWebAndThumbPreCondition</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.WebAndThumbSync(int32)</signature>
                        <name>WebAndThumbFileSetUp</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.WebThumbVerifier</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, GameAnywhere.Process.TestResult&amp;, GameAnywhere.Process.MetaData&amp;, GameAnywhere.Process.MetaData&amp;, string, string, string)</signature>
                        <name>CheckDeleteLocal</name>
                    </method>
                    <method>
                        <signature>void(int32, GameAnywhere.Process.TestResult&amp;, GameAnywhere.Process.MetaData&amp;, GameAnywhere.Process.MetaData&amp;, string, string, string)</signature>
                        <name>CheckDeleteWeb</name>
                    </method>
                    <method>
                        <signature>void(int32, GameAnywhere.Process.TestResult&amp;, GameAnywhere.Process.MetaData&amp;, GameAnywhere.Process.MetaData&amp;, string, string, string)</signature>
                        <name>CheckDownload</name>
                    </method>
                    <method>
                        <signature>void(int32, GameAnywhere.Process.TestResult&amp;, GameAnywhere.Process.MetaData&amp;, GameAnywhere.Process.MetaData&amp;, string, string, string)</signature>
                        <name>CheckUpload</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifyCheckConflicts</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Process.TestResult(int32, object, object, string, object)</signature>
                        <name>VerifyWebThumbSync</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_arrowDownload</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_arrowUpload</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_backGameChoicePopupButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_backGameChoicePopupButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_backGameChoicePopupButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerChangePasswordPanel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerChooseGamesToSync</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerConfirmGamesToSync</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerConflictResolve</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerForgetPasswordPanel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerLoginPanel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerRegisterPanel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerResendActivationPanel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerSyncErrors</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_bannerSyncResults</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_buttonRestore</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_buttonRestoreMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_buttonRestoreMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_buttonThumbdriveToComputer</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_buttonThumbdriveToComputerMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_cancelLoginPanelButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_cancelLoginPanelButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_cancelLoginPanelButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_changePasswordPanelBackground</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_computerToThumbdriveButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_computerToThumbdriveButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_computerToThumbdriveButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_computerToWebButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_computerToWebButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_computerToWebButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_confirmGameChoicePopupButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_confirmGameChoicePopupButtonDulled</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_confirmGameChoicePopupButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_confirmGameChoicePopupButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_doneResultPanelButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_doneResultPanelButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_doneResultPanelButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_download</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_downloadArrowed</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_errorsButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_errorsButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_errorsButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_exitButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_exitButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_exitButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_forgetPasswordPanelBackground</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_GameChoicePopupBackground</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_imageWarning</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_loginButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_loginButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_loginButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_loginPanelBackground</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_overallbackground2</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_overallbackground3</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_overallbackground4</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_registerButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_registerButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_registerButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_registerPanelBackground</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_resendActivationPanelBackground</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_resendButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_resendButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_resendButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_sendButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_sendButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_sendButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_thumbdriveAndWebButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_thumbdriveAndWebButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_thumbdriveAndWebButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_thumbdriveToComputerButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_thumbdriveToComputerButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_thumbdriveToComputerButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_upload</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_uploadArrowed</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_webToComputerButton</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_webToComputerButtonMouseDown</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_webToComputerButtonMouseOver</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GameAnywhere.Properties.Settings()</signature>
                        <name>get_Default</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GameAnywhere.Properties.Settings</signature>
                        <name>defaultInstance</name>
                    </field>
                </fieldlist>
            </type>
        </module>
        <module>
            <name>WebComms.dll</name>
            <type>
                <name>GameAnywhere.ConnectionFailureException</name>
                <newmodule>GameAnywhere.exe</newmodule>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>GameAnywhere.Process.SimpleDB</name>
                <newmodule>GameAnywhere.exe</newmodule>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>AddAttributeValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetAttribute</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>InsertItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ItemExists</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>UpdateAttributeValue</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>accessKey</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>domain</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Amazon.SimpleDB.AmazonSimpleDBClient</signature>
                        <name>sdb</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>secretAccessKey</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.Storage</name>
                <newmodule>GameAnywhere.exe</newmodule>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteFile</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>DownloadFile</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GenerateHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetHash</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(string)</signature>
                        <name>GetHashDictionary</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsLocked</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>ListFiles</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>UploadFile</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>accessKeyID</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>bucketName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Amazon.S3.AmazonS3Client</signature>
                        <name>client</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>secretAccessKeyID</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.User</name>
                <newmodule>GameAnywhere.exe</newmodule>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string, string, string)</signature>
                        <name>ChangePassword</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>CreateMD5Hash</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Email</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                    </method>
                    <method>
                        <signature>System.Net.Mail.MailMessage(string, string, string)</signature>
                        <name>GetActivationMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Net.Mail.MailMessage(string, string)</signature>
                        <name>GetRetrievePasswordMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsAccountActivated</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsLoggedIn</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>Login</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Logout</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>Register</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>ResendActivation</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>RetrievePassword</name>
                    </method>
                    <method>
                        <signature>bool(string, string, string)</signature>
                        <name>SendActivationEmail</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>SendPasswordEmail</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Email</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Password</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>UserExists</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GameAnywhere.Process.SimpleDB</signature>
                        <name>db</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>email</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>password</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.User/UserState</signature>
                        <name>state</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.Process.User/UserState</name>
                <newmodule>GameAnywhere.exe</newmodule>
                <newname>GameAnywhere.Process.User/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GameAnywhere.Process.User/UserState</signature>
                        <name>Guest</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GameAnywhere.Process.User/UserState</signature>
                        <name>UserLoggedIn</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>GameAnywhere.WebTransferException</name>
                <newmodule>GameAnywhere.exe</newmodule>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>errorMessage</name>
                    </field>
                </fieldlist>
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>51</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>727</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>290</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>2</statistic>
            <statistic>3.92 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>13</statistic>
            <statistic>1.79 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>14</statistic>
            <statistic>4.83 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>7</statistic>
            <statistic>0.96 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>4</statistic>
            <statistic>0.55 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>2</statistic>
            <statistic>0.28 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>